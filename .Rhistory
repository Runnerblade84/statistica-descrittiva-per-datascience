4+5.5
data = load(iris)
setwd("~/python/statistica-descrittiva-per-datascience")
getwd()
#leggi i dati
dati <- read.csv("dataset/tonni.csv",sep=";")
#leggi i dati
dati <- read.csv("datasets/tonni.csv",sep=";")
#leggi i dati
dati <- read.csv("datasets/tonni.csv",sep=";")
#leggi i dati
dati <- read.csv("datasets/tonni.csv",sep=";")
dim(dati)
N=dim(dati)[1]
View(dati)
#distribuzione di frequenze
table(dati["SESSO"])
freq_ass <- table(dati$SESSO)
freq_rel <- table(dati$SESSO)/N
distr_freq_SESSO<-cbind(freq_ass,freq_rel)
distr_freq_SESSO
#distribuzione di frequenze
freq_ass <- table(dati$LOCALIT?)
#distribuzione di frequenze
freq_ass <- table(dati$LOCALITA)
freq_rel <- table(dati$LOCALITA)/N
distr_freq_LOC<-cbind(freq_ass,freq_rel)
distr_freq_LOC
#suddivisione in classi
min(dati$LUNGHEZZA)
max(dati$LUNGHEZZA)
lunghezza_cl <- cut(dati$LUNGHEZZA,
breaks = c(10,15,20,25,30))
lunghezza_cl
ni<-table(lunghezza_cl)
fi<-ni/N
Ni<-cumsum(ni)
Fi<-Ni/N
cbind(ni,fi,Ni,Fi)
table(dati$SESSO,lunghezza_cl)
table(dati$LOCALITA,lunghezza_cl)
data("iris")
head(iris)
attach(iris)
#moda
table(Species)
#min e max
min(Petal.Length)
max(Petal.Length)
n <- length(Petal.Length)
#mediana
n/2
sort(Petal.Length)[c(75,76)]
median(Petal.Length)
#primo quartile
n/4
sort(Petal.Length)[c(38)]
#terzo quartile
n/4*3
sort(Petal.Length)[c(113)]
#quantili in generale
quantile(Petal.Length)
#decili
quantile(Petal.Length,seq(0,1,0.1))
#percentili
View(quantile(Petal.Length,seq(0,1,0.01)))
#media
sum(Petal.Length)/n
mean(Petal.Length)
#valore anomalo
c(Petal.Length,31)
mean(c(Petal.Length,541))
median(c(Petal.Length,541))
mean(c(Petal.Length,541,378))
median(c(Petal.Length,541,378))
#in classi
Petal.Length_cl <- cut(Petal.Length,seq(0,7,1))
distr_freq<-as.data.frame(
cbind(
ni=table(Petal.Length_cl),
fi=table(Petal.Length_cl)/n,
Ni=cumsum(table(Petal.Length_cl)),
Fi=cumsum(table(Petal.Length_cl))/n))
quantile(Petal.Length)
which(distr_freq$Fi > 0.25)[1]
summary(Petal.Length)
summary(iris)
#media ponderata
distr_freq$xCi <- seq(0.5,6.5,1)
distr_freq$xCi * distr_freq$ni
sum(distr_freq$xCi*distr_freq$ni) / sum(distr_freq$ni)
weighted.mean(distr_freq$xCi, distr_freq$ni)
cellule <- c(1000, 1800, 2100, 3000,5000)
incrementi <- quantmod::Delt(cellule)*100
incrementi <- incrementi[-1,1]
installed.packages("quantmod")
install.packages("quantmod")
incrementi <- quantmod::Delt(cellule)*100
!curlGetHeaders()
install.packages("TTR")
install.packages("libcurl")
library(ggplot2)
data("diamonds")
head(diamonds)
summary(diamonds)
attach(diamonds)
summary(price)
range(price)
18823-326
IQR(price)
5324-950
ggplot()+
geom_point(aes(x=seq(1,length(price)),
y=sort(price)))+
geom_hline(yintercept = quantile(price),col=2)+
geom_label(aes(x=50000,
y=quantile(price),
label=quantile(price)),
col=2)
boxplot(price)
abline(h=quantile(price),col=2)
abline(h=quantile(price,0.75) + 1.5*IQR(price),col=4)
boxplot(price~color)
ggplot(data = diamonds)+
geom_boxplot(aes(
x=color,
y=price),
fill="lightblue")
ggplot(data = diamonds)+
geom_boxplot(aes(
x=color,
y=price,
fill=cut))
mu=mean(price)
n=length(price)
sigma2 = sum((price-mu)^2)/n
sigma = sqrt(sigma2)
var(price); sd(price)
mean(z); sd(z)
CV <-function(x){
return( sd(x)/mean(x) * 100 )
}
CV(price); CV(z)
gini.index <- function(x){
ni = table(x)
fi = ni/length(x)
fi2 = fi^2
J = length(table(x))
gini = 1-sum(fi2)
gini.norm = gini/((J-1)/J)
return(gini.norm)
}
table(color)/length(color)
gini.index(color)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
depth_mu_sigma <-
diamonds %>%
group_by(cut) %>%
summarise(media=mean(depth),
devst=sd(depth))
ggplot(depth_mu_sigma)+theme_bw()+
geom_col(aes(x=cut, y=media),fill="black")+
geom_errorbar(aes(x=cut,
ymin=media-devst,
ymax=media+devst),col=2)
library(ggplot2)
dado <- c(1,2,3,4,5,6)
sample(dado,1)
lanci <- sample(dado,36,replace = T)
ggplot()+
geom_histogram(aes(x=lanci),
stat = "count",
col="black",
fill="lightblue")
dado1 <- c(1,2,3,4,5,6)
dado2 <- c(1,2,3,4,5,6)
lancio2dadi <- function(d1,d2,n){
somma <- sample(d1,n,replace = T) + sample(d2,n,replace = T)
return(somma)
}
lanci<-lancio2dadi(dado1,dado2,100000)
ggplot()+
geom_histogram(aes(x=lanci,
y=stat(count/sum(count))),
stat = "count",
col="black",
fill="lightblue")
cellule <- c(1000, 1800, 2100, 3000,5000)
incrementi <- quantmod::Delt(cellule)*100
install.packages("curl")
install.packages("curl")
library(gghalves)
x <- rnorm(100000,10,2)
plot(density(x))
#asimmetria
mu<-mean(x)
sigma <- sd(x)
m3 <- sum( (x-mu)^3 ) / length(x)
asim.fisher <- m3 / sigma^3
asim.fisher
#curtosi
m4 <- sum( (x-mu)^4 ) / length(x)
curtosi <- m4 / sigma^4 - 3
curtosi
install.packages("moments")
library(moments)
skewness(x)
kurtosis(x)
library(ggplot2)
data("diamonds")
summary(diamonds)
attach(diamonds)
ggplot()+
geom_histogram(aes(x=price),
stat = "density",
col="lightblue",
fill="lightblue")
skewness(price)
kurtosis(price)-3
mean(price) ; median(price)
View(table(price))
install.packages("gghalves")
library(gghalves)
ggplot(data=diamonds)+theme_classic()+
geom_half_violin(mapping = aes(x=cut,y=price),
side = "l",fill="lightblue")+
geom_half_boxplot(mapping = aes(x=cut,y=price),
side = "r",fill="pink")
